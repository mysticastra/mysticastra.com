name: Laravel CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Testing Job
  test:
    name: Test Laravel App
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: laravel
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    env:
      DB_CONNECTION: mysql
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DB_DATABASE: laravel
      DB_USERNAME: root
      DB_PASSWORD: password
      BROADCAST_DRIVER: log
      CACHE_DRIVER: database
      QUEUE_CONNECTION: database
      SESSION_DRIVER: file

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup PHP 8.4
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          tools: composer:v2, phpstan

      - name: Install Composer Dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Install Node.js and npm
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install Node Dependencies and Build
        run: |
          npm install
          npm run build

      - name: Setup Environment
        run: cp .env.example .env

      - name: Generate Application Key
        run: php artisan key:generate

      - name: Cache Configuration
        run: php artisan config:cache && php artisan route:cache

      - name: Run Migrations
        run: php artisan migrate --force

      - name: Run Tests
        run: php artisan test

      # - name: Analyze Code (PHPStan)
      #   run: ./vendor/bin/phpstan analyse --memory-limit=1G

  deploy:
    name: Deploy to Production Server
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup SSH Key
        run: |
          # Create SSH directory and set permissions
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh

          # Add the private SSH key
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key

          # Start the SSH agent and add the key
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/deploy_key

          # Add the server to known_hosts
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy Application
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
        run: |
          ssh -i ~/.ssh/deploy_key -p $SSH_PORT $SSH_USERNAME@$SSH_HOST << 'EOF'
          cd /home/dazelfco/sites/mysticastra.com
          git pull origin main
          composer install --no-dev --optimize-autoloader
          npm install
          npm run build
          php artisan migrate --force
          php artisan optimize
          php artisan storage:link
          php artisan queue:restart
          EOF
