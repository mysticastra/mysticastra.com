name: Laravel CI/CD Pipeline

on:
  push:
    branches:
      - dev
      - main
  pull_request:
    branches:
      - dev
      - main

jobs:
  test:
    name: Test Laravel App
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: laravel
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    env:
      DB_CONNECTION: mysql
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DB_DATABASE: laravel
      DB_USERNAME: root
      DB_PASSWORD: password
      BROADCAST_DRIVER: log
      CACHE_DRIVER: database
      QUEUE_CONNECTION: database
      SESSION_DRIVER: file

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          tools: composer:v2, phpstan

      - name: Install Composer Dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install Node Dependencies and Build
        run: |
          npm install
          npm run build

      - name: Setup Environment
        run: |
          cp .env.example .env
          php artisan key:generate

      - name: Cache Configuration
        run: php artisan config:cache && php artisan route:cache

      - name: Run Migrations
        run: php artisan migrate --force

      - name: Run Tests
        run: php artisan test

    #   - name: Analyze Code (PHPStan)
    #     run: ./vendor/bin/phpstan analyse --memory-limit=1G

  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push'

    steps:
        - name: Checkout Code
          uses: actions/checkout@v4
  
        - name: Setup SSH Key
          run: |
            mkdir -p ~/.ssh
            chmod 700 ~/.ssh
  
            eval "$(ssh-agent -s)"
            ssh-add -D
            
            echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
            chmod 600 ~/.ssh/deploy_key
  
            ssh-add ~/.ssh/deploy_key
  
            ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
  
        - name: Install sshpass
          run: sudo apt-get update && sudo apt-get install -y sshpass
  
        - name: Deploy Application
          env:
            SSH_HOST: ${{ secrets.SSH_HOST }}
            SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
            SSH_PORT: ${{ secrets.SSH_PORT }}
            SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
          run: |
            ssh -p $SSH_PORT $SSH_USERNAME@$SSH_HOST << 'EOF'
            if [ "${{ github.ref_name }}" == "main" ]; then
                DEPLOY_PATH="/home/dazelfco/sites/mysticastra.com"
            else
                DEPLOY_PATH="/home/dazelfco/sites/dev.mysticastra.com"
            fi
            cd $DEPLOY_PATH
            git pull origin ${{ github.ref_name }}
            composer install --no-dev --optimize-autoloader
            npm install
            npm run build
            php artisan migrate --force
            php artisan optimize
            php artisan storage:link
            php artisan queue:restart
            EOF
